Tree Review

Trees are useful for modeling data that has a hierarchical relationship which moves in the direction from parent to child. No child node will have more than one parent.

To recap some terms:

- root: A node which has no parent. One per tree.
- parent: A node which references other nodes.
- child: Nodes referenced by other nodes.
- sibling: Nodes which have the same parent.
- leaf: Nodes which have no children.
- level: The height or depth of the tree. Root nodes are at level 1, their children are at level 2, and so on.

In this lesson, you have successfully built a tree data structure in JavaScript. You have implemented:

- a TreeNode class that contains data and maintains a collection of TreeNode classes called children.
- an .addChild() method that adds a child to the tree as either data or TreeNode
- a .removeChild() method that removes a child from the tree as either data or TreeNode
- a .depthFirstTraversal() recursive method that fully traverses the tree with a top-down approach for each child of the tree
- a .breadthFirstTraversal() iterative method that fully traverses the tree a level at a time, instead of a child at a time
